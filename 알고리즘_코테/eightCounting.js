// ## 1.3 워밍업 문제 // ### 1.3.1 워밍업 문제(google)


// 1번 워밍업 문제

// 1부터 10,000까지 8이라는 숫자가 총 몇번 나오는가?
// 8이 포함되어 있는 숫자의 갯수를 카운팅 하는 것이 아니라 8이라는 숫자를 모두 카운팅 해야 한다.
// (※ 예를들어 8808은 3, 8888은 4로 카운팅 해야 함)

// 문제 링크 : https://codingdojang.com/scode/393

// 1부터 10,000 까지 반복 순회하기
// const par = new Array(10).fill().map((_,index) => index + 1).toString

// console.log(par)

////////////////////////////////////////////////////////////////////////////////

// 2번 워밍업 문제
// 1차원의 점들이 주어졌을 때, 그 중 가장 거리가 짧은 것의 쌍을 출력하는 함수를 작성하시오. 
// (단 점들의 배열은 모두 정렬되어있다고 가정한다.)

// 예를들어 S={1, 3, 4, 8, 13, 17, 20} 이 주어졌다면, 결과값은 (3, 4)가 될 것이다.

// 양지성 풀이
const s = [1,3,4,8,13,17,20];
const empty = [];
for(let i=0; i<s.length; i++) {
    for(let j=i+1; j<s.length-1; j++) {
        if(s[j]-s[i] === 1) {
            empty.push(s[i],s[j]);
        }
    }
}

console.log(empty);